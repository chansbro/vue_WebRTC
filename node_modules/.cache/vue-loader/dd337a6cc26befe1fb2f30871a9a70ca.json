{"remainingRequest":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/seokchanyoo/Desktop/projects/vue_WebRTC/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/src/components/HelloWorld.vue","mtime":1564232656136},{"path":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/seokchanyoo/Desktop/projects/vue_WebRTC/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data: () => ({\n    video: {}\n  }),\n  method: {\n\n  },\n  mounted() {\n    this.video = this.$refs.video;\n    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({video:true}).then(stream => {\n          this.video.srcObject = stream;\n          this.video.play();\n      }).catch(error => {console.log('navigator.getUserMedia error: ', error )})\n    }\n  }\n};\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-layout\n      text-center\n      wrap\n    >\n    <v-flex>\n          <video  autoplay playsinline ref=\"video\" id=\"video\" width=\"300\" height=\"200\"></video>\n      <span> Video Player </span>\n    </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    video: {}\n  }),\n  method: {\n\n  },\n  mounted() {\n    this.video = this.$refs.video;\n    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({video:true}).then(stream => {\n          this.video.srcObject = stream;\n          this.video.play();\n      }).catch(error => {console.log('navigator.getUserMedia error: ', error )})\n    }\n  }\n};\n</script>\n"]}]}